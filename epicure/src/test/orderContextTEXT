import React, { createContext, useContext, useState, ReactNode } from 'react';

// Define the type for the children prop
interface OrderProviderProps {
  children: ReactNode;
}

interface OrderItem {
  restaurantName: string;
  dishName: string;
  dishImage: string;
  dishQuantity: number;
  dishChanges: string[];
  dishSide: string;
  dishPrice: number;
}

interface OrderContextType {
  order: OrderItem[];
  addToOrder: (item: OrderItem) => void;
}

const OrderContext = createContext<OrderContextType | undefined>(undefined);

export const useOrder = () => {
  const context = useContext(OrderContext);
  if (!context) {
    throw new Error('useOrder must be used within an OrderProvider');
  }
  return context;
};

export const OrderProvider: React.FC<OrderProviderProps> = ({ children }) => {
  const [order, setOrder] = useState<OrderItem[]>([]);

  const addToOrder = (item: OrderItem) => {
    setOrder([...order, item]);
  };

  return (
    <OrderContext.Provider value={{ order, addToOrder }}>
      {children}
    </OrderContext.Provider>
  );
};
